// Thêm vào file prisma/schema.prisma

// Consent Management
model PatientConsent {
  id          Int      @id @default(autoincrement())
  patientId   Int
  patient     PatientProfile @relation(fields: [patientId], references: [profileId])
  grantedToId Int
  grantedTo   User     @relation(fields: [grantedToId], references: [userId])
  dataType    String   // e.g., "MEDICAL_HISTORY", "TELEMETRY", "PRESCRIPTIONS"
  purpose     String
  validUntil  DateTime
  status      String   // "ACTIVE", "REVOKED"
  revokedAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Access Logging
model AccessLog {
  id           Int      @id @default(autoincrement())
  patientId    Int
  patient      PatientProfile @relation(fields: [patientId], references: [profileId])
  accessedById Int
  accessedBy   User     @relation(fields: [accessedById], references: [userId])
  dataType     String
  purpose      String
  timestamp    DateTime @default(now())
}

// Real-time Telemetry
model PatientTelemetry {
  id         Int      @id @default(autoincrement())
  patientId  Int
  patient    PatientProfile @relation(fields: [patientId], references: [profileId])
  deviceId   String
  metricType String   // "HEART_RATE", "BLOOD_PRESSURE", "SPO2", etc.
  value      String   // JSON string of actual values
  timestamp  DateTime
  createdAt  DateTime @default(now())
}

// Alerts from Telemetry Analysis
model PatientAlert {
  id         Int      @id @default(autoincrement())
  patientId  Int
  patient    PatientProfile @relation(fields: [patientId], references: [profileId])
  alertType  String
  value      String   // JSON string of alert details
  timestamp  DateTime
  status     String   // "PENDING", "ACKNOWLEDGED", "RESOLVED"
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
